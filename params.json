{"name":"Solr-plugins","body":"***\r\n# solr-plugins\r\n\r\nWelcome to solr-plugins, a sandbox for writing a custom Solr update request processor chain (currently named \"docHandler\"). Other custom/plugin stuff might be added in the future, like:\r\n\r\n* SearchComponents\r\n* ParserPlugins\r\n* ...more?\r\n    \r\nThe \"docHandler\" chain is defined in the bundled solrconfig.xml as:\r\n\r\n    <updateRequestProcessorChain name=\"docHandler\">\r\n        <processor class=\"sandboxes.solrplugins.DownloadingUpdateProcessorFactory\" />\r\n        <processor class=\"solr.DistributedUpdateProcessorFactory\" />\r\n        <processor class=\"sandboxes.solrplugins.ExtractingUpdateProcessorFactory\" />\r\n        <processor class=\"solr.RunUpdateProcessorFactory\" />\r\n        <processor class=\"solr.LogUpdateProcessorFactory\" />\r\n    </updateRequestProcessorChain>\r\n\r\n...and performs the following steps:\r\n    \r\n1. Download the content of some URI. <- CUSTOM\r\n2. Pick a shard (via the cloud distributed indexing hooks). This might forward the SolrInputDoc to a different shard if the current one isn't the leader.\r\n3. Extract the text of the resource plus meta-data if possible <- CUSTOM\r\n4. Update the index.\r\n5. Log the update.\r\n\r\nSteps 1 and 3 are custom UpdateRequestProcessors. This project contains the source code and unit-tests for them. Note the downloading happens prior to the SolrCloud distribution logic. This is so each document is downloaded just once by the cluster. If the doc was distributed before downloading, each replica would download unnecessarily. \r\n\r\nsolr-plugins is built using Maven 3. It also includes Eclipse .project and .classpath files as well as some .settings if you're interested. Periodically tested with SOLR 4 nightly builds.\r\n\r\n\r\n***\r\n## Before you build\r\n\r\nInstall Maven 3, then install ${solr-plugins}/lib/shawty-0.9.3.jar (http://code.google.com/p/shawty/) into your local maven repository:\r\n\r\n    $ mvn install:install-file -Dfile=lib/shawty-0.9.3.jar -DgroupId=com.googlecode \\\r\n        -DartifactId=shawty -Dversion=0.9.3 -Dpackaging=jar\r\n\r\nYou should be ready to build:\r\n\r\n    $ mvn clean package\r\n\r\n***\r\n## Installing the example\r\n\r\nAssuming you've gotten this project to build and produce the target zip, install a Solr 4 nightly trunk build (http://wiki.apache.org/solr/NightlyBuilds). Make a copy of the Solr 4 example:\r\n\r\n    $ cd /path/to/solr-4\r\n    $ cp -r example solr-plugin-example\r\n    $ cd solr-plugin-example\r\n    $ unzip /path/to/solr-plugins/target/solr-plugins-0.0.1-SNAPSHOT-with-dependencies.zip\r\n\r\nStart Solr:\r\n\r\n    $ java -jar start.jar OPTIONS=All\r\n\r\n[Visit this page](http://0.0.0.0:8983/solrplugins/feeder.jsp) to index some resources referenced by an ATOM or RSS feed. You should be able to see documents being downloaded, extracted, and indexed. Next, [search](http://0.0.0.0:8983/solr/select?fl=title,uri&q=*) for some documents and have fun!","tagline":"Sandbox for custom Solr UpdateRequestProcessors, parser plugins, etc.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}